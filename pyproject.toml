[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "datacube-practices"
dynamic = ["version"]
description = 'Identify common datacube production and usage issues'
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = []
authors = [
  { name = "Max Jones", email = "14077947+maxrjones@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "xarray",
    "numpy>=2.0.0",
    "universal-pathlib",
    "numcodecs",
    "ujson",
    "packaging",
    "zarr",
    "obstore>=0.5.1",
    "dask",
]

[project.urls]
Documentation = "https://github.com/pangeo-data/datacube-worst-practices#readme"
Issues = "https://github.com/pangeo-data/datacube-worst-practices/issues"
Source = "https://github.com/pangeo-data/datacube-worst-practices"

[tool.hatch.version]
path = "src/datacube_practices/_version.py"

[tool.hatch.envs.docs]
extra-dependencies = [
  "ipykernel",
  "pooch",
  "bokeh",
  "graphviz",
  "Jinja2",
  "matplotlib",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/datacube_practices tests}"

[tool.hatch.envs.test]
skip-install = false
dependencies = [
    "codecov",
    "mypy",
    "pandas-stubs",
    "pooch",
    "pre-commit",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mypy",
    "pytest-xdist",
    "ruff",
]

[tool.hatch.envs.test.scripts]
run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov-report xml --cov=src --junitxml=junit.xml -o junit_family=legacy"
run-coverage-html = "pytest --cov-config=pyproject.toml --cov=pkg --cov-report html --cov=src"
run-pytest = "run-coverage --no-cov"
run-verbose = "run-coverage --verbose"
run-mypy = "mypy src"
list-env = "pip list"

[tool.coverage.run]
source_pkgs = ["datacube_practices", "tests"]
branch = true
parallel = true
omit = [
  "src/datacube_practices/_version.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
